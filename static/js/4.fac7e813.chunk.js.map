{"version":3,"sources":["views/addPost.js"],"names":["AddPost","props","useState","touched","isValid","errMsg","titleValid","setTitleValid","bodyValid","setBodyValid","isLoading","setIsLoading","addPostHandler","event","a","preventDefault","title","target","value","body","sendPost","res","console","log","history","replace","post","Promise","resolve","reject","setTimeout","md","lg","className","onSubmit","Group","controlId","Label","Control","type","placeholder","name","onChange","val","trim","valids","length","split","as","rows","variant","disabled"],"mappings":"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","file":"static/js/4.fac7e813.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { Container, Row, Col, Form, Button } from \"react-bootstrap\";\nimport Loader from \"../components/layout/Loader\";\nconst AddPost = (props) => {\n  const [titleValid, setTitleValid] = useState({\n    touched: false,\n    isValid: false,\n    errMsg: \"\",\n  });\n  const [bodyValid, setBodyValid] = useState({\n    touched: false,\n    isValid: false,\n    errMsg: \"\",\n  });\n  const [isLoading, setIsLoading] = useState(false);\n\n  const checkTitleValdiation = (event) => {\n    let val = event.target.value.trim();\n    let valids = { ...titleValid };\n    valids.touched = true;\n    if (val.length <= 0) {\n      valids.isValid = false;\n      valids.errMsg = \"Title is Required\";\n    } else if (val.split(\" \").length < 3) {\n      valids.isValid = false;\n      valids.errMsg = \"Title must be more than 3 words\";\n    } else if (val.split(\" \").length > 10) {\n      valids.isValid = false;\n      valids.errMsg = \"Title must be less than 10 words\";\n    } else {\n      valids.isValid = true;\n      valids.errMsg = \"\";\n    }\n    setTitleValid({ ...valids });\n  };\n\n  const checkBodyValdiation = (event) => {\n    let val = event.target.value.trim();\n    let valids = { ...bodyValid };\n    valids.touched = true;\n    if (val.length <= 0) {\n      valids.isValid = false;\n      valids.errMsg = \"Description is Required\";\n    } else if (val.split(\" \").length < 10) {\n      valids.isValid = false;\n      valids.errMsg = \"Description must be more than 10 words\";\n    } else if (val.split(\" \").length > 50) {\n      valids.isValid = false;\n      valids.errMsg = \"Description must be less than 50 words\";\n    } else {\n      valids.isValid = true;\n      valids.errMsg = \"\";\n    }\n    setBodyValid({ ...valids });\n  };\n\n  const addPostHandler = async (event) => {\n    event.preventDefault(); // will stop reloading\n    let title = event.target.title.value;\n    let body = event.target.body.value;\n    setIsLoading(true);\n    if (titleValid && bodyValid) {\n      const res = await sendPost({ title, body });\n      console.log(res);\n      if (res) {\n        props.history.replace(\"/blog\");\n        // setTimeout(() => {\n        //   document.location.reload();\n        // }, 500);\n      }\n    }\n    setIsLoading(false);\n  };\n\n  const sendPost = (post) => {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        resolve(post);\n      }, 2000);\n    });\n  };\n  return (\n    <Container>\n      <Row>\n        <Col\n          md={6}\n          lg={4}\n          className=\"mx-auto card my-5 bg-secondary pt-4 shadow-sm\"\n        >\n          <h1 className=\"text-center mb-3\">Add Post</h1>\n          <Form onSubmit={addPostHandler}>\n            <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\n              <Form.Label>Post Title</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Post Title\"\n                name=\"title\"\n                onChange={checkTitleValdiation}\n                className={\n                  titleValid.isValid && titleValid.touched\n                    ? \"border-success border-2\"\n                    : !titleValid.isValid && titleValid.touched\n                    ? \"border-danger border-2\"\n                    : \"\"\n                }\n              />\n              {titleValid.errMsg ? (\n                <small className=\"text-danger p-1\">{titleValid.errMsg}</small>\n              ) : (\n                \"\"\n              )}\n            </Form.Group>\n            <Form.Group\n              className=\"mb-3\"\n              controlId=\"exampleForm.ControlTextarea1\"\n            >\n              <Form.Label>Post Description</Form.Label>\n              <Form.Control\n                as=\"textarea\"\n                name=\"body\"\n                placeholder=\"Add a description to your post\"\n                rows={3}\n                onChange={checkBodyValdiation}\n                className={\n                  bodyValid.isValid && bodyValid.touched\n                    ? \"border-success border-2\"\n                    : !bodyValid.isValid && bodyValid.touched\n                    ? \"border-danger border-2\"\n                    : \"\"\n                }\n              />\n              {bodyValid.errMsg ? (\n                <small className=\"text-danger p-1\">{bodyValid.errMsg}</small>\n              ) : (\n                \"\"\n              )}\n            </Form.Group>\n            <Button\n              variant=\"primary\"\n              type=\"submit\"\n              className=\"w-100 mb-3\"\n              disabled={titleValid.isValid && bodyValid.isValid ? false : true}\n            >\n              {!isLoading ? \"Add New Post\" : <Loader />}\n            </Button>\n          </Form>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default AddPost;\n"],"sourceRoot":""}